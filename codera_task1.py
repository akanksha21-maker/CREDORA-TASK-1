# -*- coding: utf-8 -*-
"""codera_task1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Lv5lJ-LU-uFV6HaBaKc8LGW4CSf_rPe
"""

# ðŸ“Œ TASK: Population Data Visualization | Credora Task 01

# Step 1: Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# Plot setup
sns.set(style='whitegrid')
plt.rcParams['figure.figsize'] = (12, 6)

# Load population data (skip metadata rows)
pop_df = pd.read_csv('/content/API_SP.POP.TOTL_DS2_en_csv_v2_85220.csv', skiprows=4)

# Load metadata (if needed later for country info or indicators)
meta_country = pd.read_csv('/content/Metadata_Country_API_SP.POP.TOTL_DS2_en_csv_v2_85220.csv')
meta_indicator = pd.read_csv('/content/Metadata_Indicator_API_SP.POP.TOTL_DS2_en_csv_v2_85220.csv')

# Preview population data
pop_df.head()

df.info()

# Describe the three datasets
print("--- Population Data (pop_df) Description ---")
pop_df.info()
print("\n")

print("--- Country Metadata (meta_country) Description ---")
meta_country.info()
print("\n")

print("--- Indicator Metadata (meta_indicator) Description ---")
meta_indicator.info()
print("\n")

# Display basic statistics for numeric columns in pop_df (years)
print("--- Population Data (pop_df) Basic Statistics ---")
print(pop_df.describe())

pop_df_cleaned = pop_df.dropna()

print("Shape before dropping NaNs:", pop_df.shape)
print("Shape after dropping NaNs:", pop_df_cleaned.shape)

pop_df = pop_df_cleaned

pop_df.head()

# Keep columns from 2000 to 2022
years = [str(y) for y in range(2000, 2023)]
columns = ['Country Name', 'Country Code'] + years
pop_df = pop_df[columns]

# Convert wide format to long format
df = pop_df.melt(id_vars=['Country Name', 'Country Code'], var_name='Year', value_name='Population')

# Drop missing values
df.dropna(inplace=True)
df['Year'] = df['Year'].astype(int)
df['Population'] = df['Population'].astype(float)

# Check data types and head
df.dtypes, df.head()

latest_year = 2022
latest_df = df[df['Year'] == latest_year]
top10 = latest_df.sort_values(by='Population', ascending=False).head(10)

sns.barplot(data=top10, y='Country Name', x='Population', palette='magma')
plt.title(f"Top 10 Populated Countries in {latest_year}")
plt.xlabel("Population")
plt.ylabel("Country")
plt.tight_layout()
plt.show()

sns.histplot(latest_df['Population'], bins=30, kde=True, color='skyblue')
plt.title(f"Distribution of Country Populations in {latest_year}")
plt.xlabel("Population")
plt.ylabel("Number of Countries")
plt.tight_layout()
plt.show()

selected_countries = ['India', 'China', 'United States', 'Indonesia', 'Brazil']
df_line = df[df['Country Name'].isin(selected_countries)]

sns.lineplot(data=df_line, x='Year', y='Population', hue='Country Name', marker='o')
plt.title("Population Growth Over Time (2000â€“2022)")
plt.xlabel("Year")
plt.ylabel("Population")
plt.tight_layout()
plt.show()

fig = px.choropleth(latest_df,
                    locations="Country Name",
                    locationmode="country names",
                    color="Population",
                    hover_name="Country Name",
                    color_continuous_scale="Viridis",
                    title=f"Global Population Distribution by Country ({latest_year})")
fig.show()